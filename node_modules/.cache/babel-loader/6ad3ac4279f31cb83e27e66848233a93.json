{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Projects/new_projects_react/my-app/src/App.js\";\nimport { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\" //its a string of search input ---> empty on the start\n\n    };\n    console.log('Constructor');\n  }\n\n  componentDidMount() {\n    console.log('Component Did Mount ');\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => console.log(this.state))).catch(error => console.log('I have failed'));\n  }\n\n  render() {\n    console.log(\"Render\");\n    const filteredMonsters = this.state.monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"Search monsters\",\n        onChange: event => {\n          //console.log(event.target.value);\n          const searchField = event.target.value.toLocaleLowerCase();\n          this.setState(() => {\n            return {\n              searchField\n            };\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), filteredMonsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["Component","App","constructor","state","monsters","searchField","console","log","componentDidMount","fetch","then","response","json","users","setState","catch","error","render","filteredMonsters","filter","monster","name","toLocaleLowerCase","includes","event","target","value","map","id"],"sources":["/Users/Sveta/Documents/Projects/new_projects_react/my-app/src/App.js"],"sourcesContent":["import { Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField:\"\",//its a string of search input ---> empty on the start\n    };\n    \n    console.log('Constructor')\n  }\n\n  componentDidMount(){\n    console.log('Component Did Mount ')\n    fetch ('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((users) => this.setState(() => {\n      return { monsters: users };\n    },\n      () => console.log(this.state))\n    )\n    .catch(error => console.log('I have failed'))}\n  \n  render(){\n    console.log(\"Render\")\n\n    const filteredMonsters = this.state.monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <input \n          className='search-box' \n          type='search' \n          placeholder='Search monsters' \n          onChange={(event) => {\n            //console.log(event.target.value);\n            const searchField = event.target.value.toLocaleLowerCase();\n            this.setState(() => {\n              return { searchField }\n            }\n            );\n          }}\n        />\n        {\n          filteredMonsters.map((monster) => {\n            return <h1 key={monster.id}>{monster.name}</h1>\n          })\n        }\n       \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EAC1BE,WAAW,GAAE;IACX;IACA,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAG,EADA;MAEXC,WAAW,EAAC,EAFD,CAEI;;IAFJ,CAAb;IAKAC,OAAO,CAACC,GAAR,CAAY,aAAZ;EACD;;EAEDC,iBAAiB,GAAE;IACjBF,OAAO,CAACC,GAAR,CAAY,sBAAZ;IACAE,KAAK,CAAE,4CAAF,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,KAAD,IAAW,KAAKC,QAAL,CAAc,MAAM;MACnC,OAAO;QAAEV,QAAQ,EAAES;MAAZ,CAAP;IACD,CAFgB,EAGf,MAAMP,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB,CAHS,CAFjB,EAOCY,KAPD,CAOOC,KAAK,IAAIV,OAAO,CAACC,GAAR,CAAY,eAAZ,CAPhB;EAO8C;;EAEhDU,MAAM,GAAE;IACNX,OAAO,CAACC,GAAR,CAAY,QAAZ;IAEA,MAAMW,gBAAgB,GAAG,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,MAApB,CAA4BC,OAAD,IAAa;MAC/D,OAAOA,OAAO,CAACC,IAAR,CAAaC,iBAAb,GAAiCC,QAAjC,CAA0C,KAAKpB,KAAL,CAAWE,WAArD,CAAP;IACD,CAFwB,CAAzB;IAIA,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QACE,SAAS,EAAC,YADZ;QAEE,IAAI,EAAC,QAFP;QAGE,WAAW,EAAC,iBAHd;QAIE,QAAQ,EAAGmB,KAAD,IAAW;UACnB;UACA,MAAMnB,WAAW,GAAGmB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBJ,iBAAnB,EAApB;UACA,KAAKR,QAAL,CAAc,MAAM;YAClB,OAAO;cAAET;YAAF,CAAP;UACD,CAFD;QAID;MAXH;QAAA;QAAA;QAAA;MAAA,QADF,EAeIa,gBAAgB,CAACS,GAAjB,CAAsBP,OAAD,IAAa;QAChC,oBAAO;UAAA,UAAsBA,OAAO,CAACC;QAA9B,GAASD,OAAO,CAACQ,EAAjB;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD,CAfJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAuBD;;AApDyB;;AAwD5B,eAAe3B,GAAf"},"metadata":{},"sourceType":"module"}